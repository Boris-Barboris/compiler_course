Modified grammar from lab3 without left recursion.

Program -> { ExprList }
ExprList -> Expr Tail
Tail -> ; Expr Tail
Tail -> __eps
Expr -> ArithmExpr RelationOp ArithmExpr
Expr -> ArithmExpr
ArithmExpr' -> AddOp Term ArithmExpr'
ArithmExpr' -> AddOp Term
ArithmExpr -> Term ArithmExpr'
ArithmExpr -> Term
Term' -> MultOp Factor Term'
Term' -> MultOp Factor
Factor -> id
Factor -> const
Factor -> ( ArithmExpr )
RelationOp -> <
RelationOp -> <=
RelationOp -> =
RelationOp -> <>
RelationOp -> >=
RelationOp -> >
AddOp -> +
AddOp -> -
MultOp -> *
MultOp -> /
Term -> id Term'
Term -> id
Term -> const Term'
Term -> const
Term -> ( ArithmExpr ) Term'
Term -> ( ArithmExpr )
axiom: Program
